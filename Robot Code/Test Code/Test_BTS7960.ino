/*......................
 *  ทดสอบ BTS7960 HBridge
 *  
 *  ตัวอย่างง่ายในการใช้ BTS7960 HBridge เพื่อควบคุมมอเตอร์
 *  สคริปต์นี้เพียงแค่ส่งสัญญาณ PWM ไปยัง HBridge เพื่อหมุนมอเตอร์
 * ในทิศทางหนึ่งและหมุนมอเตอร์ในทิศทางอื่น
 *  
 *  คำอธิบาย PWM สำหรับ Arduino: https://www.arduino.cc/en/tutorial/PWM
 *  
 *  โดย : Barry Tarlton
*/
// กำหนดขาขาออกสำหรับ PWM ด้านขวาและ PWM ด้านซ้าย
// "ขวา" และ "ซ้าย" เป็นคำที่เกี่ยวกับทิศทางของมอเตอร์ และ
// ไม่มีความหมายจากมุมมองการโปรแกรม ขึ้นอยู่กับวิธีการเชื่อมต่อหรือติดตั้งทางกายภาพ
// การส่งสัญญาณใน RPWM มอเตอร์จะหมุนในทิศทางหนึ่ง และเมื่อคุณส่งสัญญาณใน LPWM
// มอเตอร์จะหมุนในทิศทางอื่น

int RPWM = 5;  // ขาดิจิทัล/PWM ขา 5 ไปยัง RPWM บน BTS7960
int LPWM = 6;  // ขาดิจิทัล/PWM ขา 6 ไปยง LPWM บน BTS7960

// เปิดใช้งานการเคลื่อนที่ "ซ้าย" และ "ขวา"
int L_EN = 7;  // เชื่อมขาดิจิทัล/PWM 7 ไปยง L_EN บน BTS7960
int R_EN = 8;  // เชื่อมขาดิจิทัล/PWM 8 ไปยง R_EN บน BTS7960

void setup() {
  // วางโค้ดการตั้งค่าของคุณที่นี่ เพื่อทำงานครั้งเดียว:

  // กำหนดขาทั้งหมดให้เป็นโหลด
  for (int i = 5; i < 9; i++) {
    pinMode(i, OUTPUT);
  }
  // ตั้งค่าขาที่คุณต้องการใช้เป็นสถานะต่ำ
  for (int i = 5; i < 9; i++) {
    digitalWrite(i, LOW);
  }
  delay(1000);// รอ 1 วินาที
  Serial.begin(9600);
  
  // เปิดใช้งานการเคลื่อนที่ "ขวา" และ "ซ้าย" บน HBridge
  // สังเกตการใช้งาน digitalWrite เพื่อเปิดใช้งานและเท่าที่ควร
  digitalWrite(R_EN, HIGH);  
  digitalWrite(L_EN, HIGH);
}

void loop() {
  // วางโค้ดหลักของคุณที่นี่ เพื่อทำงานเรื่อย ๆ:

  // ใช้ analogWrite(pin, ที่บอกให้ส่งสัญญาณแบบแกว่ง (PWM) ไปยังขาที่ระบุที่อัตรา "หน้าที่" ที่ระบุ
  // ค่าที่ถูกต้องคือ 0 ถึง 255  0 หมายความว่าไม่มีสัญญาณ (หรือไม่มีพลังงาน) เและ 255 หมายความว่าเปิดเต็มที่
  // https://www.arduino.cc/reference/en/language/functions/analog-io/analogwrite/
  analogWrite(RPWM, 64); // ส่งสัญญาณอย่างต่อเนื่องที่อัตรา 64 
  // บรรทัด analogWrite ข้างต้นควรเริ่มการหมุนของมอเตอร์ในทิศทางหนึ่งประมาณ 1/4 ของพลังงาน
  delay(5000); // รอ 5 วินาที มอเตอร์ยังคงเคลื่อนที่เนื่องจากสัญญาณ analogWrite กำลังเต็มที่
  analogWrite(RPWM, 128); // ส่งสัญญาณอย่างต่อเนื่องที่ 128 (ประมาณครึ่งของ 255 ส่วนตัว)
  delay(5000);

  // หลังจาก 5 วินาทีที่ครึ่งของพลังงานหยุดการเคลื่อนที่ของมอเตอร์
  analogWrite(RPWM, 0);
  delay(5000);
  // ตอนนี้เริ่มการเคลื่อนที่ในทิศทางตรงข้าม
  analogWrite(LPWM, 64);
  delay(5000);
  analogWrite(LPWM, 128);
  delay(5000);
  analogWrite(LPWM, 0); // หยุดการเคลื่อนที่ในทิศทางนี้
  // ณจุดนี้ควรจะไม่มีการเคลื่อนที่
  delay(5000);
}
